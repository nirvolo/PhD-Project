"0","# Generating grid points based on the scaled boundaries of Kansas."
"0","summary(scl_locs)"
"1",""
"1","       V1         "
"1","       V2          "
"1","
"
"1"," Min.   :-3.4693  "
"1"," Min.   :-1.36132  "
"1","
"
"1"," 1st Qu.:-1.5612  "
"1"," 1st Qu.:-0.77340  "
"1","
"
"1"," Median : 0.2508  "
"1"," Median :-0.03018  "
"1","
"
"1"," Mean   : 0.2521  "
"1"," Mean   :-0.02604  "
"1","
"
"1"," 3rd Qu.: 2.1841  "
"1"," 3rd Qu.: 0.72430  "
"1","
"
"1"," Max.   : 3.5722  "
"1"," Max.   : 1.31638  "
"1","
"
"0","uu = seq(-3.65, 2.5, length.out = 40) # longitude"
"0","vv = seq(-1.45, 1.45, length.out = 40) # latitude"
"0","n1 = length(uu)"
"0","n2 = length(vv)"
"0","u = rep(uu,n2) # repeats the vector uu 10 times"
"0","v = rep(vv,rep(n1,n2)) # repeats each value in vv 10 times"
"0","grid_pts = matrix(c(u,v), nrow = length(u), ncol = 2)"
"0","#grid_pts"
"0","# Generating the true coefficients (complex cas) based on the grid"
"0","grid_coefs = coef_fxns(locs = grid_pts, coef = func_type)"
"0","#grid_coefs"
"0",""
"0","# load bivariate basis for the grid pts I generated above"
"0","B0_grid = basis(kns_tri2$V, kns_tri2$Tr, d = 3, r = 1, grid_pts)"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"2","Warning: x[] <- val: val is coerced to logical for ""lgCMatrix"" x"
"0","Q2_grid = B0_grid$Q2"
"0","#BQ2_grid = as.matrix(B0_grid$Bi%*%Q2_grid)"
"0","BQ2_grid = as.matrix(B0_grid$B%*%Q2_grid)"
"0",""
"0","# Calculating the estimated coefficients for the grid points based on the training model fit"
"0","est_coefs = BQ2_grid%*%best_fit$svfm_fit$theta_hat"
"0","#est_coefs"
